{"version":3,"sources":["webpack:///static/js/51.e8142ca14961502c9b78.js","webpack:///src/views/platform/efficiencyAnalysis/comprehensiveTargetAnalysis.vue","webpack:///./src/views/platform/efficiencyAnalysis/comprehensiveTargetAnalysis.vue?977d","webpack:///./src/views/platform/efficiencyAnalysis/comprehensiveTargetAnalysis.vue"],"names":["webpackJsonp","KUBJ","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__util_util__","data","rdsEnergySubitem","energySubitemList","rdsCompare","dateArr","Array","dateType","tjqDate","Date","jqDate","startTime","endTime","treeDefaultKeys","orgTreeData","treeData","sspTrendData","tjq_sspTrendData","jq_sspTrendData","sspTrendTime","energyQuotaData","product","productList","benchMarking","benchMarkingList","sglSspTrendData","tjq_sglSspTrendData","jq_sglSspTrendData","sglSspTrendTime","unitEnergyQuotaData","dateFormat","xAxisFormat","legendFormat","lineDataAttr","name","yIndex","attr","color","compareList","compareName","id","methods","inintData","_this","this","t1","$moment","i","$ajax","all","getEnergySubitemList","getOrgTreeData","then","res","status","records","nodeKey","checkedKeys","expandedKeys","toString","$nextTick","getProductList","url","method","params","title","_this2","me","paramsObj","orgIds","length","loadData","$message","warning","answerMsg","compareChange","orgChange","node","obj","getQueryDataParams","getEnergyQuotaData","getUnitEnergyQuotaData","getSspTrendData","getSglSspTrendData","energyIds","cycle","getStartEndTime","targetCycle","targetTypes","contentTypes","contentIds","objTypes","objTypeValues","isQueryAll","isOrgId","isContentType","isObjType","type","_this3","curParam","$store","state","targetConstant","targetType","energyConsum","targetContentType","energy","concat","_this4","benchmarkQuota","date","times","dateChange","productChange","benchMarkingChange","value","benchmark","typeName","$refs","singleSonsumptionTrend","changeTarget","_this5","unitProductEnergyConsum","targetSubordinate","_this6","quota","mounted","Vjl0","render","_vm","_h","$createElement","_c","_self","attrs","width","height","noHead","padding-content","staticClass","max-num","option-lists","label","value-key","model","callback","$$v","expression","_v","on","change","time-type","show-time","is-picker-end","update:timeType","$event","click","ref","overflow","padding","data-lists","default-expand","expand-on-click-node","defaultKeys","currentChange","date-time","format","x-axis-format","line-data","x-axis-key","legend-format","line-data-attr","min-height","slot","maxNum","staticRenderFns","esExports","Zt4M","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_comprehensiveTargetAnalysis_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_61257b41_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_comprehensiveTargetAnalysis_vue__","normalizeComponent","Component"],"mappings":"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","file":"static/js/51.e8142ca14961502c9b78.js","sourcesContent":["webpackJsonp([51],{\n\n/***/ \"KUBJ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_util__ = __webpack_require__(\"yt7g\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /**\r\n   * 数据定义区\r\n   */\n  data: function data() {\n    return {\n      rdsEnergySubitem: \"\", //选择的能源\n      energySubitemList: [], // 能源种类列表\n      rdsCompare: \"\", //环比 同比 自定义\n      dateArr: new Array(), //统计期  基期时间\n      dateType: \"\", //日期类型\n      tjqDate: new Date(), //统计期\n      jqDate: new Date(), //基期\n      startTime: new Date(), //开始时间\n      endTime: new Date(), //结束时间\n      treeDefaultKeys: {},\n      orgTreeData: [], //组织架构树数据\n      treeData: \"\", //组织架构树选择的节点的ID\n      sspTrendData: [], //能耗趋势分析曲线图数据\n      tjq_sspTrendData: [], //能耗趋势分析曲线图数据(统计期)\n      jq_sspTrendData: [], //能耗趋势分析曲线图数据(基期)\n      sspTrendTime: \"\", //能耗趋势分析曲线图X轴时间\n      energyQuotaData: {}, //能耗定额数据\n      product: \"\", //所选择的产品\n      productList: [], //产品列表数据\n      benchMarking: \"\", //所选择的标杆\n      benchMarkingList: [], //标杆列表数据\n      sglSspTrendData: [], //单耗趋势分析曲线图数据\n      tjq_sglSspTrendData: [], //单耗趋势分析曲线图数据(统计期)\n      jq_sglSspTrendData: [], //单耗趋势分析曲线图数据(基期)\n      sglSspTrendTime: \"\", //单耗趋势分析曲线图X轴时间\n      unitEnergyQuotaData: {}, //单耗定额数据\n      dateFormat: \"YYYY-MM\", //\n      xAxisFormat: \"DD日\", //X轴日期格式化\n      legendFormat: \"YYYY年MM月\", //\n      lineDataAttr: [{ name: \"定额值\", yIndex: 0, attr: \"quota\", color: \"#FF0000\" }, { name: \"标杆值\", yIndex: 0, attr: \"benchmark\", color: \"#00BB00\" }],\n      compareList: [{ compareName: \"环比\", id: 1 }, { compareName: \"同比\", id: 2 }, { compareName: \"自定义\", id: 3 }]\n    };\n  },\n\n  methods: {\n    //初始化\n    inintData: function inintData() {\n      var _this = this;\n\n      this.rdsCompare = 1; //默认为环比\n      this.dateType = \"5\"; //默认为月\n      var t1 = new Date();\n      t1 = this.$moment(t1, \"YYYY-MM\");\n      this.tjqDate = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(t1, -1, 5, \"YYYY-MM\"); //设置为上个月\n      this.jqDate = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(t1, -2, 5, \"YYYY-MM\"); //设置为上上个月\n      this.dateArr[0] = this.$moment(this.tjqDate, \"YYYY-MM\");\n      this.dateArr[1] = this.$moment(this.jqDate, \"YYYY-MM\");\n\n      this.rdsEnergySubitem = 35; //默认为电力\n\n      this.$ajax.all([this.getEnergySubitemList(), this.getOrgTreeData()]).then(function (res) {\n        if (res[0].data.status) {\n          _this.energySubitemList = res[0].data.records;\n        }\n\n        if (res[1].data.status) {\n          _this.treeDefaultKeys = {\n            nodeKey: \"id\",\n            checkedKeys: [res[1].data.records[0].id],\n            expandedKeys: []\n          };\n          _this.orgTreeData = res[1].data.records;\n          _this.treeData = res[1].data.records[0].id.toString();\n        }\n\n        _this.$nextTick(function () {\n          _this.dateArr = [_this.dateArr[0], _this.dateArr[1]]; //等组件初始化完后再赋值\n          _this.getProductList();\n        });\n      });\n    },\n\n    /**\r\n     * 查询能源种类\r\n     */\n    getEnergySubitemList: function getEnergySubitemList() {\n      var me = this;\n      return me.$ajax({\n        url: \"rest/analysisData/energy\",\n        method: \"get\",\n        params: { title: \"能源种类\" }\n      });\n    },\n\n    /**\r\n     * 加载组织架构树数据\r\n     */\n    getOrgTreeData: function getOrgTreeData() {\n      var me = this;\n      return me.$ajax({\n        url: \"rest/analysisData/departTree\",\n        method: \"get\",\n        params: { title: \"组织架构数据\" }\n      });\n    },\n\n    //获得产品数据\n    getProductList: function getProductList() {\n      var _this2 = this;\n\n      var me = this;\n      var paramsObj = {\n        title: \"产品资料\",\n        orgIds: me.treeData //组织架构ID\n      };\n      me.$ajax({\n        url: \"rest/analysisData/product\",\n        method: \"get\",\n        params: paramsObj\n      }).then(function (res) {\n        if (res.data.status) {\n          me.productList = res.data.records;\n          if (me.productList != null && me.productList.length > 0) {\n            _this2.product = res.data.records[0].id;\n            me.loadData();\n          } else {\n            _this2.product = \"\";\n          }\n        } else {\n          _this2.$message.warning(res.data.answerMsg);\n        }\n      });\n    },\n\n    //同比环比切换触发事件\n    compareChange: function compareChange() {\n      if (this.rdsCompare == 1) {\n        //环比\n        if (this.dateType == 5) {\n          this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(this.dateArr[0], -1, 5, \"YYYY-MM\"); //设置为上个月\n        } else if (this.dateType == 8) {\n          this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(this.dateArr[0], -1, 8, \"YYYY\"); //设置为去年\n        }\n      } else if (this.rdsCompare == 2) {\n        //同比\n        if (this.dateType == 5) {\n          this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(this.dateArr[0], -1, 8, \"YYYY-MM\"); //设置为去年同个月\n        } else if (this.dateType == 8) {\n          this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(this.dateArr[0], -1, 8, \"YYYY\"); //设置为去年\n        }\n      } else if (this.rdsCompare == 3) {\n        //自定义\n      }\n      this.dateArr = [this.dateArr[0], this.dateArr[1]];\n    },\n\n    //树单击事件\n    orgChange: function orgChange(node) {\n      // if (!node.obj.children) {\n      this.treeData = node.obj.id;\n      this.getProductList();\n      // }\n    },\n\n    //加载数据\n    loadData: function loadData() {\n      this.sglSspTrendData = [];\n      this.sspTrendData = [];\n      this.energyQuotaData = {};\n      this.unitEnergyQuotaData = {};\n      var params = this.getQueryDataParams(); //根据选择的条件生成参数\n\n      this.getEnergyQuotaData(params); //获取能耗定额数据\n      this.getUnitEnergyQuotaData(params); //获取单耗定额/标杆数据\n      // this.getBenchMarkingList(params); //获取标杆数据\n      this.getSspTrendData(params, \"统计期\"); //获取能耗曲线数据\n      this.getSglSspTrendData(params, \"统计期\"); //获取单耗曲线数据\n    },\n\n    /**\r\n     * 根据选择的条件生成参数\r\n     */\n    getQueryDataParams: function getQueryDataParams() {\n      var me = this;\n\n      var energyIds = me.rdsEnergySubitem;\n\n      var cycle = \"\";\n      if (me.dateType == 5) {\n        cycle = 3;\n        me.dateFormat = \"YYYY-MM\";\n        me.xAxisFormat = \"DD日\";\n        me.legendFormat = \"YYYY年MM月\";\n      } else if (me.dateType == 8) {\n        cycle = 5;\n        me.dateFormat = \"YYYY\";\n        me.xAxisFormat = \"MM月\";\n        me.legendFormat = \"YYYY年\";\n      }\n\n      me.getStartEndTime(this.dateArr[0]);\n\n      var params = {\n        title: \"\",\n        orgIds: me.treeData, //组织架构ID\n        targetCycle: cycle, //指标周期\n        targetTypes: \"\", //指标类型\n        contentTypes: \"\", //统计内容类型\n        contentIds: energyIds, //统计内容ID，此处为能源ID\n        objTypes: \"\", //指标关联对象类型\n        objTypeValues: \"\", //指标关联对象类型对应的值\n        isQueryAll: false, // Boolean,是否所有指标数据\n        // benchmarkQuota: \"100\", //表示查询的是标杆数据，[标杆][定额][目标]\n        startTime: \"\", //开始时间\n        endTime: \"\", //结束时间\n        isOrgId: false, // Boolean,是否返回部门ID\n        isContentType: false, // Boolean,是否返回指标统计内容类型ID\n        isObjType: \"\" // String,是否返回指标关联对象,1为班组，2为设备，3为产品\n      };\n\n      return params;\n    },\n\n    //获得标杆数据\n    // getBenchMarkingList(params) {\n    //   let me = this;\n    //   let curParam = deepJSONCopy(params);\n    //   curParam.title = \"标杆资料\";\n    //   curParam.startTime = me.startTime;\n    //   curParam.endTime = me.endTime;\n    //   curParam.targetTypes =\n    //     me.$store.state.targetConstant.targetType.unitProductEnergyConsum;\n    //   curParam.contentTypes =\n    //     me.$store.state.targetConstant.targetContentType.energy;\n    //   curParam.benchmarkQuota = \"100\"; //表示查询的是标杆数据，[标杆][定额][目标]\n    //   curParam.objTypes =\n    //     me.$store.state.targetConstant.targetSubordinate.product;\n    //   curParam.objTypeValues = me.product;\n    //   me\n    //     .$ajax({\n    //       url: \"rest/analysisData/targetBenchmarkData\",\n    //       method: \"get\",\n    //       params: curParam\n    //     })\n    //     .then(res => {\n    //       if (res.data.status) {\n    //         me.benchMarkingList = res.data.records.benchmark;\n    //       } else {\n    //         this.$message.warning(res.data.answerMsg);\n    //       }\n    //     });\n    // },\n\n    //获得能耗趋势分析曲线图数据\n    getSspTrendData: function getSspTrendData(params, type) {\n      var _this3 = this;\n\n      var me = this;\n      var curParam = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"l\" /* deepJSONCopy */])(params);\n      curParam.title = type + \"能耗曲线数据\";\n      curParam.startTime = this.startTime;\n      curParam.endTime = this.endTime;\n      curParam.targetTypes = me.$store.state.targetConstant.targetType.energyConsum;\n      curParam.contentTypes = me.$store.state.targetConstant.targetContentType.energy;\n      curParam.objTypes = \"\";\n      curParam.objTypeValues = \"\";\n      // curParam.benchmarkQuota = \"000\";\n      me.$ajax({\n        url: \"rest/analysisData/targetData\",\n        method: \"get\",\n        params: curParam\n      }).then(function (res) {\n        if (res.data.status) {\n          if (type == \"统计期\") {\n            me.tjq_sspTrendData = res.data.records;\n\n            me.getStartEndTime(_this3.dateArr[1]);\n            me.getSspTrendData(params, \"基期\");\n          } else {\n            me.jq_sspTrendData = res.data.records;\n\n            //me.sspTrendData = me.tjq_sspTrendData;\n            me.sspTrendData = me.tjq_sspTrendData.concat(me.jq_sspTrendData);\n\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"o\" /* getFixedDisplayData */])(me.sspTrendData);\n          }\n        } else {\n          _this3.$message.warning(res.data.answerMsg);\n        }\n      });\n    },\n\n    //获得能耗定额值\n    getEnergyQuotaData: function getEnergyQuotaData(params) {\n      var _this4 = this;\n\n      var me = this;\n      var curParam = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"l\" /* deepJSONCopy */])(params);\n      curParam.title = \"能耗定额数据\";\n      curParam.startTime = me.startTime;\n      curParam.endTime = me.endTime;\n      curParam.targetTypes = me.$store.state.targetConstant.targetType.energyConsum;\n      curParam.contentTypes = me.$store.state.targetConstant.targetContentType.energy;\n      curParam.benchmarkQuota = \"010\"; //表示查询的是定额数据，[标杆][定额][目标]\n\n      me.$ajax({\n        url: \"rest/analysisData/targetBenchmarkData\",\n        method: \"get\",\n        params: curParam\n      }).then(function (res) {\n        if (res.data.status) {\n          me.energyQuotaData = res.data.records;\n        } else {\n          me.energyQuotaData = {};\n\n          _this4.$message.warning(res.data.answerMsg);\n        }\n      });\n    },\n\n    //获得开始日期和结束日期\n    getStartEndTime: function getStartEndTime(date) {\n      var times = [];\n      if (this.dateType == 5) {\n        times = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"f\" /* cycleTime */])(date, 5);\n      } else if (this.dateType == 8) {\n        times = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"f\" /* cycleTime */])(date, 8);\n      }\n      this.startTime = times[0];\n      this.endTime = times[1];\n    },\n\n    //日期改变事件\n    dateChange: function dateChange(date, type) {\n      if (date && date[0] && date[1]) {\n        this.dateType = type;\n        if (this.rdsCompare == 1) {\n          //环比\n          if (this.dateType == 5) {\n            this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(date[0], -1, 5, \"YYYY-MM\"); //设置为上个月\n          } else if (this.dateType == 8) {\n            this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(date[0], -1, 8, \"YYYY\"); //设置为去年\n          }\n        } else if (this.rdsCompare == 2) {\n          //同比\n          if (this.dateType == 5) {\n            this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(date[0], -1, 8, \"YYYY-MM\"); //设置为去年同个月\n          } else if (this.dateType == 8) {\n            this.dateArr[1] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"g\" /* calcTime */])(date[0], -1, 8, \"YYYY\"); //设置为去年\n          }\n        } else if (this.rdsCompare == 3) {}\n        //自定义\n\n        //this.dateArr = [this.dateArr[0], this.dateArr[1]];\n      }\n    },\n\n    //点击产品切换按钮事件\n    productChange: function productChange() {\n      var params = this.getQueryDataParams(); //根据选择的条件生成参数\n\n      this.getUnitEnergyQuotaData(params); //获取定额、标杆数据\n\n      this.getSglSspTrendData(params, \"统计期\"); //获取单耗曲线数据\n    },\n\n\n    //点击标杆切换按钮事件\n    benchMarkingChange: function benchMarkingChange(value) {\n      var benchmark = [];\n      for (var i = 0; i < this.benchMarkingList.length; i++) {\n        if (this.benchMarkingList[i].typeName == value) {\n          benchmark[0] = this.benchMarkingList[i];\n          this.unitEnergyQuotaData.benchmark = benchmark;\n          this.$refs.singleSonsumptionTrend.changeTarget(this.unitEnergyQuotaData);\n        }\n      }\n    },\n\n\n    //单耗趋势分析曲线图数据\n    getSglSspTrendData: function getSglSspTrendData(params, type) {\n      var _this5 = this;\n\n      var me = this;\n      var curParam = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"l\" /* deepJSONCopy */])(params);\n      curParam.title = type + \"单耗曲线数据\";\n      curParam.startTime = this.startTime;\n      curParam.endTime = this.endTime;\n      curParam.targetTypes = me.$store.state.targetConstant.targetType.unitProductEnergyConsum;\n      curParam.contentTypes = me.$store.state.targetConstant.targetContentType.energy;\n      curParam.objTypes = me.$store.state.targetConstant.targetSubordinate.product;\n      curParam.objTypeValues = me.product;\n      me.$ajax({\n        url: \"rest/analysisData/targetData\",\n        method: \"get\",\n        params: curParam\n      }).then(function (res) {\n        if (res.data.status) {\n          if (type == \"统计期\") {\n            me.tjq_sglSspTrendData = res.data.records;\n\n            me.getStartEndTime(_this5.dateArr[1]);\n            me.getSglSspTrendData(params, \"基期\");\n          } else {\n            me.jq_sglSspTrendData = res.data.records;\n\n            // me.sglSspTrendData = me.tjq_sglSspTrendData;\n            me.sglSspTrendData = me.tjq_sglSspTrendData.concat(me.jq_sglSspTrendData);\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"o\" /* getFixedDisplayData */])(me.sglSspTrendData);\n          }\n        } else {\n          if (type == \"统计期\") {\n            me.tjq_sglSspTrendData = [];\n            me.getStartEndTime(_this5.dateArr[1]);\n            me.getSglSspTrendData(params, \"基期\");\n          } else {\n            me.jq_sglSspTrendData = [];\n          }\n\n          _this5.$message.warning(res.data.answerMsg);\n        }\n      });\n    },\n\n\n    //获得单耗定额、标杆值\n    getUnitEnergyQuotaData: function getUnitEnergyQuotaData(params) {\n      var _this6 = this;\n\n      var me = this;\n      var curParam = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__util_util__[\"l\" /* deepJSONCopy */])(params);\n      curParam.title = \"单耗定额及标杆数据\";\n      curParam.startTime = me.startTime;\n      curParam.endTime = me.endTime;\n      curParam.targetTypes = me.$store.state.targetConstant.targetType.unitProductEnergyConsum;\n      curParam.contentTypes = me.$store.state.targetConstant.targetContentType.energy;\n      curParam.benchmarkQuota = \"110\"; //表示查询的是定额数据，[标杆][定额][目标]\n      curParam.objTypes = me.$store.state.targetConstant.targetSubordinate.product;\n      curParam.objTypeValues = me.product;\n      me.$ajax({\n        url: \"rest/analysisData/targetBenchmarkData\",\n        method: \"get\",\n        params: curParam\n      }).then(function (res) {\n        if (res.data.status) {\n          var data = {};\n          var benchmark = [];\n          if (res.data.records.benchmark != null && res.data.records.benchmark.length > 0) {\n            benchmark[0] = res.data.records.benchmark[0]; //多个标杆时默认取第一个标杆值\n            data.benchmark = benchmark;\n            data.quota = res.data.records.quota;\n            me.unitEnergyQuotaData = data;\n          }\n\n          me.benchMarkingList = res.data.records.benchmark;\n        } else {\n          _this6.$message.warning(res.data.answerMsg);\n        }\n      });\n    }\n  },\n  //页面初始化时自动调用\n  mounted: function mounted() {\n    this.inintData();\n  }\n});\n\n/***/ }),\n\n/***/ \"Vjl0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('da-panel', {\n    attrs: {\n      \"width\": \"100%\",\n      \"height\": \"auto\",\n      \"noHead\": true,\n      \"padding-content\": \"tblr\"\n    }\n  }, [_c('da-radio-select', {\n    staticClass: \"mar-tb-5\",\n    attrs: {\n      \"max-num\": 5,\n      \"option-lists\": _vm.energySubitemList,\n      \"label\": \"name\",\n      \"value-key\": \"id\"\n    },\n    model: {\n      value: (_vm.rdsEnergySubitem),\n      callback: function($$v) {\n        _vm.rdsEnergySubitem = $$v\n      },\n      expression: \"rdsEnergySubitem\"\n    }\n  }), _vm._v(\" \"), _c('da-radio-select', {\n    attrs: {\n      \"max-num\": 5,\n      \"option-lists\": _vm.compareList,\n      \"label\": \"compareName\",\n      \"value-key\": \"id\"\n    },\n    on: {\n      \"change\": _vm.compareChange\n    },\n    model: {\n      value: (_vm.rdsCompare),\n      callback: function($$v) {\n        _vm.rdsCompare = $$v\n      },\n      expression: \"rdsCompare\"\n    }\n  }), _vm._v(\" \"), _c('da-time-range', {\n    attrs: {\n      \"time-type\": _vm.dateType,\n      \"show-time\": [5, 8],\n      \"is-picker-end\": false\n    },\n    on: {\n      \"update:timeType\": function($event) {\n        _vm.dateType = $event\n      },\n      \"change\": _vm.dateChange\n    },\n    model: {\n      value: (_vm.dateArr),\n      callback: function($$v) {\n        _vm.dateArr = $$v\n      },\n      expression: \"dateArr\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"el-button el-button--primary\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.loadData\n    }\n  }, [_c('span', [_vm._v(\"查询\")])])], 1), _vm._v(\" \"), _c('da-panel', {\n    ref: \"panelCount\",\n    attrs: {\n      \"title\": \"组织架构\",\n      \"width\": \"30%\",\n      \"overflow\": \"auto\",\n      \"height\": \"252px\",\n      \"padding\": \"tr\"\n    }\n  }, [_c('da-tree', {\n    attrs: {\n      \"data-lists\": _vm.orgTreeData,\n      \"default-expand\": true,\n      \"expand-on-click-node\": false,\n      \"defaultKeys\": _vm.treeDefaultKeys\n    },\n    on: {\n      \"currentChange\": _vm.orgChange\n    }\n  })], 1), _vm._v(\" \"), _c('da-panel', {\n    ref: \"panelCount\",\n    attrs: {\n      \"title\": \"能耗趋势分析\",\n      \"width\": \"70%\",\n      \"height\": \"auto\",\n      \"padding\": \"t\"\n    }\n  }, [_c('da-line-chart', {\n    attrs: {\n      \"id\": \"sonsumptionTrend\",\n      \"date-time\": _vm.dateArr[0],\n      \"format\": _vm.dateFormat,\n      \"x-axis-format\": _vm.xAxisFormat,\n      \"data-lists\": _vm.sspTrendData,\n      \"line-data\": _vm.energyQuotaData,\n      \"label\": \"dataTime\",\n      \"x-axis-key\": \"dataTime\",\n      \"legend-format\": _vm.legendFormat,\n      \"line-data-attr\": _vm.lineDataAttr\n    }\n  }), _vm._v(\" \"), _c('div')], 1), _vm._v(\" \"), _c('da-panel', {\n    ref: \"panelCount\",\n    attrs: {\n      \"title\": \"单耗趋势分析\",\n      \"width\": \"100%\",\n      \"height\": \"auto\",\n      \"min-height\": \"200px\",\n      \"padding\": \"tb\"\n    }\n  }, [_c('div', {\n    attrs: {\n      \"slot\": \"search\"\n    },\n    slot: \"search\"\n  }, [_vm._v(\"\\n      产品：\\n      \"), _c('da-radio-select', {\n    attrs: {\n      \"maxNum\": 1,\n      \"option-lists\": _vm.productList,\n      \"label\": \"name\",\n      \"value-key\": \"id\"\n    },\n    on: {\n      \"change\": _vm.productChange\n    },\n    model: {\n      value: (_vm.product),\n      callback: function($$v) {\n        _vm.product = $$v\n      },\n      expression: \"product\"\n    }\n  }), _vm._v(\"\\n      标杆：\\n      \"), _c('da-radio-select', {\n    attrs: {\n      \"maxNum\": 1,\n      \"option-lists\": _vm.benchMarkingList,\n      \"label\": \"typeName\",\n      \"value-key\": \"typeName\"\n    },\n    on: {\n      \"change\": _vm.benchMarkingChange\n    },\n    model: {\n      value: (_vm.benchMarking),\n      callback: function($$v) {\n        _vm.benchMarking = $$v\n      },\n      expression: \"benchMarking\"\n    }\n  })], 1), _vm._v(\" \"), _c('da-line-chart', {\n    ref: \"singleSonsumptionTrend\",\n    attrs: {\n      \"id\": \"singleSonsumptionTrend\",\n      \"date-time\": _vm.dateArr[0],\n      \"format\": _vm.dateFormat,\n      \"x-axis-format\": _vm.xAxisFormat,\n      \"data-lists\": _vm.sglSspTrendData,\n      \"line-data\": _vm.unitEnergyQuotaData,\n      \"label\": \"dataTime\",\n      \"x-axis-key\": \"dataTime\",\n      \"legend-format\": _vm.legendFormat,\n      \"line-data-attr\": _vm.lineDataAttr\n    }\n  }), _vm._v(\" \"), _c('div')], 1)], 1)\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"Zt4M\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_comprehensiveTargetAnalysis_vue__ = __webpack_require__(\"KUBJ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_61257b41_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_comprehensiveTargetAnalysis_vue__ = __webpack_require__(\"Vjl0\");\nvar normalizeComponent = __webpack_require__(\"J0+h\")\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_script_index_0_comprehensiveTargetAnalysis_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_0_4_vue_loader_lib_template_compiler_index_id_data_v_61257b41_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_13_0_4_vue_loader_lib_selector_type_template_index_0_comprehensiveTargetAnalysis_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/51.e8142ca14961502c9b78.js","<template>\r\n  <div>\r\n\r\n    <da-panel width=\"100%\" height=\"auto\" :noHead=\"true\" padding-content=\"tblr\">\r\n      <da-radio-select class=\"mar-tb-5\" v-model=\"rdsEnergySubitem\" :max-num=\"5\" :option-lists=\"energySubitemList\" label=\"name\" value-key=\"id\"></da-radio-select>\r\n      <da-radio-select v-model=\"rdsCompare\" :max-num=\"5\" :option-lists=\"compareList\" label=\"compareName\" value-key=\"id\" @change=\"compareChange\"></da-radio-select>\r\n      <da-time-range v-model=\"dateArr\" :time-type.sync=\"dateType\" :show-time=\"[5,8]\" @change=\"dateChange\" :is-picker-end=false></da-time-range>\r\n      <button type=\"button\" class=\"el-button el-button--primary\" @click=\"loadData\">\r\n        <span>查询</span>\r\n      </button>\r\n    </da-panel>\r\n\r\n    <da-panel title=\"组织架构\" width=\"30%\" overflow=\"auto\" height=\"252px\" padding=\"tr\" ref=\"panelCount\">\r\n      <da-tree :data-lists=\"orgTreeData\" :default-expand=\"true\" @currentChange=\"orgChange\" :expand-on-click-node=\"false\" :defaultKeys=\"treeDefaultKeys\"></da-tree>\r\n    </da-panel>\r\n    <da-panel title=\"能耗趋势分析\" width=\"70%\" height=\"auto\" padding=\"t\" ref=\"panelCount\">\r\n\r\n      <da-line-chart id=\"sonsumptionTrend\" :date-time=\"dateArr[0]\" :format=\"dateFormat\" :x-axis-format=\"xAxisFormat\" :data-lists=\"sspTrendData\" :line-data=\"energyQuotaData\" label=\"dataTime\" x-axis-key=\"dataTime\" :legend-format=\"legendFormat\" :line-data-attr=\"lineDataAttr\"></da-line-chart>\r\n      <div>\r\n        <!-- sspTrendTable -->\r\n      </div>\r\n    </da-panel>\r\n    <da-panel title=\"单耗趋势分析\" width=\"100%\" height=\"auto\" min-height=\"200px\" padding=\"tb\" ref=\"panelCount\">\r\n      <div slot=\"search\">\r\n        产品：\r\n        <da-radio-select v-model=\"product\" :maxNum=\"1\" :option-lists=\"productList\" label=\"name\" value-key=\"id\" @change=\"productChange\"></da-radio-select>\r\n        标杆：\r\n        <da-radio-select v-model=\"benchMarking\" :maxNum=\"1\" :option-lists=\"benchMarkingList\" label=\"typeName\" value-key=\"typeName\" @change=\"benchMarkingChange\"></da-radio-select>\r\n      </div>\r\n      <da-line-chart id=\"singleSonsumptionTrend\" ref=\"singleSonsumptionTrend\" :date-time=\"dateArr[0]\" :format=\"dateFormat\" :x-axis-format=\"xAxisFormat\" :data-lists=\"sglSspTrendData\" :line-data=\"unitEnergyQuotaData\" label=\"dataTime\" x-axis-key=\"dataTime\" :legend-format=\"legendFormat\" :line-data-attr=\"lineDataAttr\"></da-line-chart>\r\n      <div>\r\n        <!-- sglTrendTable -->\r\n      </div>\r\n    </da-panel>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {\r\n  deepJSONCopy,\r\n  getListByTree,\r\n  changeTree,\r\n  reduceById,\r\n  calcTime,\r\n  cycleTime,\r\n  getFixedDisplayData\r\n} from \"../../../util/util\";\r\nexport default {\r\n  /**\r\n   * 数据定义区\r\n   */\r\n  data() {\r\n    return {\r\n      rdsEnergySubitem: \"\", //选择的能源\r\n      energySubitemList: [], // 能源种类列表\r\n      rdsCompare: \"\", //环比 同比 自定义\r\n      dateArr: new Array(), //统计期  基期时间\r\n      dateType: \"\", //日期类型\r\n      tjqDate: new Date(), //统计期\r\n      jqDate: new Date(), //基期\r\n      startTime: new Date(), //开始时间\r\n      endTime: new Date(), //结束时间\r\n      treeDefaultKeys: {},\r\n      orgTreeData: [], //组织架构树数据\r\n      treeData: \"\", //组织架构树选择的节点的ID\r\n      sspTrendData: [], //能耗趋势分析曲线图数据\r\n      tjq_sspTrendData: [], //能耗趋势分析曲线图数据(统计期)\r\n      jq_sspTrendData: [], //能耗趋势分析曲线图数据(基期)\r\n      sspTrendTime: \"\", //能耗趋势分析曲线图X轴时间\r\n      energyQuotaData: {}, //能耗定额数据\r\n      product: \"\", //所选择的产品\r\n      productList: [], //产品列表数据\r\n      benchMarking: \"\", //所选择的标杆\r\n      benchMarkingList: [], //标杆列表数据\r\n      sglSspTrendData: [], //单耗趋势分析曲线图数据\r\n      tjq_sglSspTrendData: [], //单耗趋势分析曲线图数据(统计期)\r\n      jq_sglSspTrendData: [], //单耗趋势分析曲线图数据(基期)\r\n      sglSspTrendTime: \"\", //单耗趋势分析曲线图X轴时间\r\n      unitEnergyQuotaData: {}, //单耗定额数据\r\n      dateFormat: \"YYYY-MM\", //\r\n      xAxisFormat: \"DD日\", //X轴日期格式化\r\n      legendFormat: \"YYYY年MM月\", //\r\n      lineDataAttr: [\r\n        { name: \"定额值\", yIndex: 0, attr: \"quota\", color: \"#FF0000\" },\r\n        { name: \"标杆值\", yIndex: 0, attr: \"benchmark\", color: \"#00BB00\" }\r\n      ],\r\n      compareList: [\r\n        { compareName: \"环比\", id: 1 },\r\n        { compareName: \"同比\", id: 2 },\r\n        { compareName: \"自定义\", id: 3 }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    //初始化\r\n    inintData() {\r\n      this.rdsCompare = 1; //默认为环比\r\n      this.dateType = \"5\"; //默认为月\r\n      let t1 = new Date();\r\n      t1 = this.$moment(t1, \"YYYY-MM\");\r\n      this.tjqDate = calcTime(t1, -1, 5, \"YYYY-MM\"); //设置为上个月\r\n      this.jqDate = calcTime(t1, -2, 5, \"YYYY-MM\"); //设置为上上个月\r\n      this.dateArr[0] = this.$moment(this.tjqDate, \"YYYY-MM\");\r\n      this.dateArr[1] = this.$moment(this.jqDate, \"YYYY-MM\");\r\n\r\n      this.rdsEnergySubitem = 35; //默认为电力\r\n\r\n      this.$ajax\r\n        .all([this.getEnergySubitemList(), this.getOrgTreeData()])\r\n        .then(res => {\r\n          if (res[0].data.status) {\r\n            this.energySubitemList = res[0].data.records;\r\n          }\r\n\r\n          if (res[1].data.status) {\r\n            this.treeDefaultKeys = {\r\n              nodeKey: \"id\",\r\n              checkedKeys: [res[1].data.records[0].id],\r\n              expandedKeys: []\r\n            };\r\n            this.orgTreeData = res[1].data.records;\r\n            this.treeData = res[1].data.records[0].id.toString();\r\n          }\r\n\r\n          this.$nextTick(() => {\r\n            this.dateArr = [this.dateArr[0], this.dateArr[1]]; //等组件初始化完后再赋值\r\n            this.getProductList();\r\n          });\r\n        });\r\n    },\r\n    /**\r\n     * 查询能源种类\r\n     */\r\n    getEnergySubitemList() {\r\n      let me = this;\r\n      return me.$ajax({\r\n        url: \"rest/analysisData/energy\",\r\n        method: \"get\",\r\n        params: { title: \"能源种类\" }\r\n      });\r\n    },\r\n    /**\r\n     * 加载组织架构树数据\r\n     */\r\n    getOrgTreeData() {\r\n      let me = this;\r\n      return me.$ajax({\r\n        url: \"rest/analysisData/departTree\",\r\n        method: \"get\",\r\n        params: { title: \"组织架构数据\" }\r\n      });\r\n    },\r\n    //获得产品数据\r\n    getProductList() {\r\n      let me = this;\r\n      let paramsObj = {\r\n        title: \"产品资料\",\r\n        orgIds: me.treeData //组织架构ID\r\n      };\r\n      me\r\n        .$ajax({\r\n          url: \"rest/analysisData/product\",\r\n          method: \"get\",\r\n          params: paramsObj\r\n        })\r\n        .then(res => {\r\n          if (res.data.status) {\r\n            me.productList = res.data.records;\r\n            if (me.productList != null && me.productList.length > 0) {\r\n              this.product = res.data.records[0].id;\r\n              me.loadData();\r\n            } else {\r\n              this.product = \"\";\r\n            }\r\n          } else {\r\n            this.$message.warning(res.data.answerMsg);\r\n          }\r\n        });\r\n    },\r\n    //同比环比切换触发事件\r\n    compareChange() {\r\n      if (this.rdsCompare == 1) {\r\n        //环比\r\n        if (this.dateType == 5) {\r\n          this.dateArr[1] = calcTime(this.dateArr[0], -1, 5, \"YYYY-MM\"); //设置为上个月\r\n        } else if (this.dateType == 8) {\r\n          this.dateArr[1] = calcTime(this.dateArr[0], -1, 8, \"YYYY\"); //设置为去年\r\n        }\r\n      } else if (this.rdsCompare == 2) {\r\n        //同比\r\n        if (this.dateType == 5) {\r\n          this.dateArr[1] = calcTime(this.dateArr[0], -1, 8, \"YYYY-MM\"); //设置为去年同个月\r\n        } else if (this.dateType == 8) {\r\n          this.dateArr[1] = calcTime(this.dateArr[0], -1, 8, \"YYYY\"); //设置为去年\r\n        }\r\n      } else if (this.rdsCompare == 3) {\r\n        //自定义\r\n      }\r\n      this.dateArr = [this.dateArr[0], this.dateArr[1]];\r\n    },\r\n    //树单击事件\r\n    orgChange(node) {\r\n      // if (!node.obj.children) {\r\n      this.treeData = node.obj.id;\r\n      this.getProductList();\r\n      // }\r\n    },\r\n    //加载数据\r\n    loadData() {\r\n      this.sglSspTrendData = [];\r\n      this.sspTrendData = [];\r\n      this.energyQuotaData = {};\r\n      this.unitEnergyQuotaData = {};\r\n      let params = this.getQueryDataParams(); //根据选择的条件生成参数\r\n\r\n      this.getEnergyQuotaData(params); //获取能耗定额数据\r\n      this.getUnitEnergyQuotaData(params); //获取单耗定额/标杆数据\r\n      // this.getBenchMarkingList(params); //获取标杆数据\r\n      this.getSspTrendData(params, \"统计期\"); //获取能耗曲线数据\r\n      this.getSglSspTrendData(params, \"统计期\"); //获取单耗曲线数据\r\n    },\r\n    /**\r\n     * 根据选择的条件生成参数\r\n     */\r\n    getQueryDataParams() {\r\n      let me = this;\r\n\r\n      let energyIds = me.rdsEnergySubitem;\r\n\r\n      let cycle = \"\";\r\n      if (me.dateType == 5) {\r\n        cycle = 3;\r\n        me.dateFormat = \"YYYY-MM\";\r\n        me.xAxisFormat = \"DD日\";\r\n        me.legendFormat = \"YYYY年MM月\";\r\n      } else if (me.dateType == 8) {\r\n        cycle = 5;\r\n        me.dateFormat = \"YYYY\";\r\n        me.xAxisFormat = \"MM月\";\r\n        me.legendFormat = \"YYYY年\";\r\n      }\r\n\r\n      me.getStartEndTime(this.dateArr[0]);\r\n\r\n      let params = {\r\n        title: \"\",\r\n        orgIds: me.treeData, //组织架构ID\r\n        targetCycle: cycle, //指标周期\r\n        targetTypes: \"\", //指标类型\r\n        contentTypes: \"\", //统计内容类型\r\n        contentIds: energyIds, //统计内容ID，此处为能源ID\r\n        objTypes: \"\", //指标关联对象类型\r\n        objTypeValues: \"\", //指标关联对象类型对应的值\r\n        isQueryAll: false, // Boolean,是否所有指标数据\r\n        // benchmarkQuota: \"100\", //表示查询的是标杆数据，[标杆][定额][目标]\r\n        startTime: \"\", //开始时间\r\n        endTime: \"\", //结束时间\r\n        isOrgId: false, // Boolean,是否返回部门ID\r\n        isContentType: false, // Boolean,是否返回指标统计内容类型ID\r\n        isObjType: \"\" // String,是否返回指标关联对象,1为班组，2为设备，3为产品\r\n      };\r\n\r\n      return params;\r\n    },\r\n    //获得标杆数据\r\n    // getBenchMarkingList(params) {\r\n    //   let me = this;\r\n    //   let curParam = deepJSONCopy(params);\r\n    //   curParam.title = \"标杆资料\";\r\n    //   curParam.startTime = me.startTime;\r\n    //   curParam.endTime = me.endTime;\r\n    //   curParam.targetTypes =\r\n    //     me.$store.state.targetConstant.targetType.unitProductEnergyConsum;\r\n    //   curParam.contentTypes =\r\n    //     me.$store.state.targetConstant.targetContentType.energy;\r\n    //   curParam.benchmarkQuota = \"100\"; //表示查询的是标杆数据，[标杆][定额][目标]\r\n    //   curParam.objTypes =\r\n    //     me.$store.state.targetConstant.targetSubordinate.product;\r\n    //   curParam.objTypeValues = me.product;\r\n    //   me\r\n    //     .$ajax({\r\n    //       url: \"rest/analysisData/targetBenchmarkData\",\r\n    //       method: \"get\",\r\n    //       params: curParam\r\n    //     })\r\n    //     .then(res => {\r\n    //       if (res.data.status) {\r\n    //         me.benchMarkingList = res.data.records.benchmark;\r\n    //       } else {\r\n    //         this.$message.warning(res.data.answerMsg);\r\n    //       }\r\n    //     });\r\n    // },\r\n\r\n    //获得能耗趋势分析曲线图数据\r\n    getSspTrendData(params, type) {\r\n      let me = this;\r\n      let curParam = deepJSONCopy(params);\r\n      curParam.title = type + \"能耗曲线数据\";\r\n      curParam.startTime = this.startTime;\r\n      curParam.endTime = this.endTime;\r\n      curParam.targetTypes =\r\n        me.$store.state.targetConstant.targetType.energyConsum;\r\n      curParam.contentTypes =\r\n        me.$store.state.targetConstant.targetContentType.energy;\r\n      curParam.objTypes = \"\";\r\n      curParam.objTypeValues = \"\";\r\n      // curParam.benchmarkQuota = \"000\";\r\n      me\r\n        .$ajax({\r\n          url: \"rest/analysisData/targetData\",\r\n          method: \"get\",\r\n          params: curParam\r\n        })\r\n        .then(res => {\r\n          if (res.data.status) {\r\n            if (type == \"统计期\") {\r\n              me.tjq_sspTrendData = res.data.records;\r\n\r\n              me.getStartEndTime(this.dateArr[1]);\r\n              me.getSspTrendData(params, \"基期\");\r\n            } else {\r\n              me.jq_sspTrendData = res.data.records;\r\n\r\n              //me.sspTrendData = me.tjq_sspTrendData;\r\n              me.sspTrendData = me.tjq_sspTrendData.concat(me.jq_sspTrendData);\r\n\r\n              getFixedDisplayData(me.sspTrendData);\r\n            }\r\n          } else {\r\n            this.$message.warning(res.data.answerMsg);\r\n          }\r\n        });\r\n    },\r\n    //获得能耗定额值\r\n    getEnergyQuotaData(params) {\r\n      let me = this;\r\n      let curParam = deepJSONCopy(params);\r\n      curParam.title = \"能耗定额数据\";\r\n      curParam.startTime = me.startTime;\r\n      curParam.endTime = me.endTime;\r\n      curParam.targetTypes =\r\n        me.$store.state.targetConstant.targetType.energyConsum;\r\n      curParam.contentTypes =\r\n        me.$store.state.targetConstant.targetContentType.energy;\r\n      curParam.benchmarkQuota = \"010\"; //表示查询的是定额数据，[标杆][定额][目标]\r\n\r\n      me\r\n        .$ajax({\r\n          url: \"rest/analysisData/targetBenchmarkData\",\r\n          method: \"get\",\r\n          params: curParam\r\n        })\r\n        .then(res => {\r\n          if (res.data.status) {\r\n            me.energyQuotaData = res.data.records;\r\n          } else {\r\n            me.energyQuotaData = {};\r\n\r\n            this.$message.warning(res.data.answerMsg);\r\n          }\r\n        });\r\n    },\r\n    //获得开始日期和结束日期\r\n    getStartEndTime(date) {\r\n      let times = [];\r\n      if (this.dateType == 5) {\r\n        times = cycleTime(date, 5);\r\n      } else if (this.dateType == 8) {\r\n        times = cycleTime(date, 8);\r\n      }\r\n      this.startTime = times[0];\r\n      this.endTime = times[1];\r\n    },\r\n    //日期改变事件\r\n    dateChange(date, type) {\r\n      if (date && date[0] && date[1]) {\r\n        this.dateType = type;\r\n        if (this.rdsCompare == 1) {\r\n          //环比\r\n          if (this.dateType == 5) {\r\n            this.dateArr[1] = calcTime(date[0], -1, 5, \"YYYY-MM\"); //设置为上个月\r\n          } else if (this.dateType == 8) {\r\n            this.dateArr[1] = calcTime(date[0], -1, 8, \"YYYY\"); //设置为去年\r\n          }\r\n        } else if (this.rdsCompare == 2) {\r\n          //同比\r\n          if (this.dateType == 5) {\r\n            this.dateArr[1] = calcTime(date[0], -1, 8, \"YYYY-MM\"); //设置为去年同个月\r\n          } else if (this.dateType == 8) {\r\n            this.dateArr[1] = calcTime(date[0], -1, 8, \"YYYY\"); //设置为去年\r\n          }\r\n        } else if (this.rdsCompare == 3) {\r\n          //自定义\r\n        }\r\n        //this.dateArr = [this.dateArr[0], this.dateArr[1]];\r\n      }\r\n    },\r\n    //点击产品切换按钮事件\r\n    productChange() {\r\n      let params = this.getQueryDataParams(); //根据选择的条件生成参数\r\n\r\n      this.getUnitEnergyQuotaData(params); //获取定额、标杆数据\r\n\r\n      this.getSglSspTrendData(params, \"统计期\"); //获取单耗曲线数据\r\n    },\r\n\r\n    //点击标杆切换按钮事件\r\n    benchMarkingChange(value) {\r\n      let benchmark = [];\r\n      for (let i = 0; i < this.benchMarkingList.length; i++) {\r\n        if (this.benchMarkingList[i].typeName == value) {\r\n          benchmark[0] = this.benchMarkingList[i];\r\n          this.unitEnergyQuotaData.benchmark = benchmark;\r\n          this.$refs.singleSonsumptionTrend.changeTarget(\r\n            this.unitEnergyQuotaData\r\n          );\r\n        }\r\n      }\r\n    },\r\n\r\n    //单耗趋势分析曲线图数据\r\n    getSglSspTrendData(params, type) {\r\n      let me = this;\r\n      let curParam = deepJSONCopy(params);\r\n      curParam.title = type + \"单耗曲线数据\";\r\n      curParam.startTime = this.startTime;\r\n      curParam.endTime = this.endTime;\r\n      curParam.targetTypes =\r\n        me.$store.state.targetConstant.targetType.unitProductEnergyConsum;\r\n      curParam.contentTypes =\r\n        me.$store.state.targetConstant.targetContentType.energy;\r\n      curParam.objTypes =\r\n        me.$store.state.targetConstant.targetSubordinate.product;\r\n      curParam.objTypeValues = me.product;\r\n      me\r\n        .$ajax({\r\n          url: \"rest/analysisData/targetData\",\r\n          method: \"get\",\r\n          params: curParam\r\n        })\r\n        .then(res => {\r\n          if (res.data.status) {\r\n            if (type == \"统计期\") {\r\n              me.tjq_sglSspTrendData = res.data.records;\r\n\r\n              me.getStartEndTime(this.dateArr[1]);\r\n              me.getSglSspTrendData(params, \"基期\");\r\n            } else {\r\n              me.jq_sglSspTrendData = res.data.records;\r\n\r\n              // me.sglSspTrendData = me.tjq_sglSspTrendData;\r\n              me.sglSspTrendData = me.tjq_sglSspTrendData.concat(\r\n                me.jq_sglSspTrendData\r\n              );\r\n              getFixedDisplayData(me.sglSspTrendData);\r\n            }\r\n          } else {\r\n            if (type == \"统计期\") {\r\n              me.tjq_sglSspTrendData = [];\r\n              me.getStartEndTime(this.dateArr[1]);\r\n              me.getSglSspTrendData(params, \"基期\");\r\n            } else {\r\n              me.jq_sglSspTrendData = [];\r\n            }\r\n\r\n            this.$message.warning(res.data.answerMsg);\r\n          }\r\n        });\r\n    },\r\n\r\n    //获得单耗定额、标杆值\r\n    getUnitEnergyQuotaData(params) {\r\n      let me = this;\r\n      let curParam = deepJSONCopy(params);\r\n      curParam.title = \"单耗定额及标杆数据\";\r\n      curParam.startTime = me.startTime;\r\n      curParam.endTime = me.endTime;\r\n      curParam.targetTypes =\r\n        me.$store.state.targetConstant.targetType.unitProductEnergyConsum;\r\n      curParam.contentTypes =\r\n        me.$store.state.targetConstant.targetContentType.energy;\r\n      curParam.benchmarkQuota = \"110\"; //表示查询的是定额数据，[标杆][定额][目标]\r\n      curParam.objTypes =\r\n        me.$store.state.targetConstant.targetSubordinate.product;\r\n      curParam.objTypeValues = me.product;\r\n      me\r\n        .$ajax({\r\n          url: \"rest/analysisData/targetBenchmarkData\",\r\n          method: \"get\",\r\n          params: curParam\r\n        })\r\n        .then(res => {\r\n          if (res.data.status) {\r\n            let data = {};\r\n            let benchmark = [];\r\n            if (\r\n              res.data.records.benchmark != null &&\r\n              res.data.records.benchmark.length > 0\r\n            ) {\r\n              benchmark[0] = res.data.records.benchmark[0]; //多个标杆时默认取第一个标杆值\r\n              data.benchmark = benchmark;\r\n              data.quota = res.data.records.quota;\r\n              me.unitEnergyQuotaData = data;\r\n            }\r\n\r\n            me.benchMarkingList = res.data.records.benchmark;\r\n          } else {\r\n            this.$message.warning(res.data.answerMsg);\r\n          }\r\n        });\r\n    }\r\n  },\r\n  //页面初始化时自动调用\r\n  mounted() {\r\n    this.inintData();\r\n  }\r\n};\r\n</script>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/platform/efficiencyAnalysis/comprehensiveTargetAnalysis.vue?68d6d10f","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('da-panel', {\n    attrs: {\n      \"width\": \"100%\",\n      \"height\": \"auto\",\n      \"noHead\": true,\n      \"padding-content\": \"tblr\"\n    }\n  }, [_c('da-radio-select', {\n    staticClass: \"mar-tb-5\",\n    attrs: {\n      \"max-num\": 5,\n      \"option-lists\": _vm.energySubitemList,\n      \"label\": \"name\",\n      \"value-key\": \"id\"\n    },\n    model: {\n      value: (_vm.rdsEnergySubitem),\n      callback: function($$v) {\n        _vm.rdsEnergySubitem = $$v\n      },\n      expression: \"rdsEnergySubitem\"\n    }\n  }), _vm._v(\" \"), _c('da-radio-select', {\n    attrs: {\n      \"max-num\": 5,\n      \"option-lists\": _vm.compareList,\n      \"label\": \"compareName\",\n      \"value-key\": \"id\"\n    },\n    on: {\n      \"change\": _vm.compareChange\n    },\n    model: {\n      value: (_vm.rdsCompare),\n      callback: function($$v) {\n        _vm.rdsCompare = $$v\n      },\n      expression: \"rdsCompare\"\n    }\n  }), _vm._v(\" \"), _c('da-time-range', {\n    attrs: {\n      \"time-type\": _vm.dateType,\n      \"show-time\": [5, 8],\n      \"is-picker-end\": false\n    },\n    on: {\n      \"update:timeType\": function($event) {\n        _vm.dateType = $event\n      },\n      \"change\": _vm.dateChange\n    },\n    model: {\n      value: (_vm.dateArr),\n      callback: function($$v) {\n        _vm.dateArr = $$v\n      },\n      expression: \"dateArr\"\n    }\n  }), _vm._v(\" \"), _c('button', {\n    staticClass: \"el-button el-button--primary\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.loadData\n    }\n  }, [_c('span', [_vm._v(\"查询\")])])], 1), _vm._v(\" \"), _c('da-panel', {\n    ref: \"panelCount\",\n    attrs: {\n      \"title\": \"组织架构\",\n      \"width\": \"30%\",\n      \"overflow\": \"auto\",\n      \"height\": \"252px\",\n      \"padding\": \"tr\"\n    }\n  }, [_c('da-tree', {\n    attrs: {\n      \"data-lists\": _vm.orgTreeData,\n      \"default-expand\": true,\n      \"expand-on-click-node\": false,\n      \"defaultKeys\": _vm.treeDefaultKeys\n    },\n    on: {\n      \"currentChange\": _vm.orgChange\n    }\n  })], 1), _vm._v(\" \"), _c('da-panel', {\n    ref: \"panelCount\",\n    attrs: {\n      \"title\": \"能耗趋势分析\",\n      \"width\": \"70%\",\n      \"height\": \"auto\",\n      \"padding\": \"t\"\n    }\n  }, [_c('da-line-chart', {\n    attrs: {\n      \"id\": \"sonsumptionTrend\",\n      \"date-time\": _vm.dateArr[0],\n      \"format\": _vm.dateFormat,\n      \"x-axis-format\": _vm.xAxisFormat,\n      \"data-lists\": _vm.sspTrendData,\n      \"line-data\": _vm.energyQuotaData,\n      \"label\": \"dataTime\",\n      \"x-axis-key\": \"dataTime\",\n      \"legend-format\": _vm.legendFormat,\n      \"line-data-attr\": _vm.lineDataAttr\n    }\n  }), _vm._v(\" \"), _c('div')], 1), _vm._v(\" \"), _c('da-panel', {\n    ref: \"panelCount\",\n    attrs: {\n      \"title\": \"单耗趋势分析\",\n      \"width\": \"100%\",\n      \"height\": \"auto\",\n      \"min-height\": \"200px\",\n      \"padding\": \"tb\"\n    }\n  }, [_c('div', {\n    attrs: {\n      \"slot\": \"search\"\n    },\n    slot: \"search\"\n  }, [_vm._v(\"\\n      产品：\\n      \"), _c('da-radio-select', {\n    attrs: {\n      \"maxNum\": 1,\n      \"option-lists\": _vm.productList,\n      \"label\": \"name\",\n      \"value-key\": \"id\"\n    },\n    on: {\n      \"change\": _vm.productChange\n    },\n    model: {\n      value: (_vm.product),\n      callback: function($$v) {\n        _vm.product = $$v\n      },\n      expression: \"product\"\n    }\n  }), _vm._v(\"\\n      标杆：\\n      \"), _c('da-radio-select', {\n    attrs: {\n      \"maxNum\": 1,\n      \"option-lists\": _vm.benchMarkingList,\n      \"label\": \"typeName\",\n      \"value-key\": \"typeName\"\n    },\n    on: {\n      \"change\": _vm.benchMarkingChange\n    },\n    model: {\n      value: (_vm.benchMarking),\n      callback: function($$v) {\n        _vm.benchMarking = $$v\n      },\n      expression: \"benchMarking\"\n    }\n  })], 1), _vm._v(\" \"), _c('da-line-chart', {\n    ref: \"singleSonsumptionTrend\",\n    attrs: {\n      \"id\": \"singleSonsumptionTrend\",\n      \"date-time\": _vm.dateArr[0],\n      \"format\": _vm.dateFormat,\n      \"x-axis-format\": _vm.xAxisFormat,\n      \"data-lists\": _vm.sglSspTrendData,\n      \"line-data\": _vm.unitEnergyQuotaData,\n      \"label\": \"dataTime\",\n      \"x-axis-key\": \"dataTime\",\n      \"legend-format\": _vm.legendFormat,\n      \"line-data-attr\": _vm.lineDataAttr\n    }\n  }), _vm._v(\" \"), _c('div')], 1)], 1)\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@13.0.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-61257b41\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/_vue-loader@13.0.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/platform/efficiencyAnalysis/comprehensiveTargetAnalysis.vue\n// module id = Vjl0\n// module chunks = 51","var normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=script&index=0!./comprehensiveTargetAnalysis.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61257b41\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../../../node_modules/_vue-loader@13.0.4@vue-loader/lib/selector?type=template&index=0!./comprehensiveTargetAnalysis.vue\"\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/platform/efficiencyAnalysis/comprehensiveTargetAnalysis.vue\n// module id = Zt4M\n// module chunks = 51"],"sourceRoot":""}